
This message is shown once a day. To disable it please create the
homesridhar.hushlogin file.
sridhar@DESKTOP-LHMTJ2I~$ git
usage git [--version] [--help] [-C path] [-c name=value]
           [--exec-path[=path]] [--html-path] [--man-path] [--info-path]
           [-p  --paginate  -P  --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=path] [--work-tree=path] [--namespace=name]
           [--super-prefix=path] [--config-env=name=envvar]
           command [args]

These are common Git commands used in various situations

start a working area (see also git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help command' or 'git help concept'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
sridhar@DESKTOP-LHMTJ2I~$ git clone httpsgithub.comsridhar667Devops--test.git
Cloning into 'Devops--test'...
remote Enumerating objects 36, done.
remote Counting objects 100% (3636), done.
remote Compressing objects 100% (2525), done.
remote Total 36 (delta 9), reused 0 (delta 0), pack-reused 0
Receiving objects 100% (3636), 12.50 KiB  673.00 KiBs, done.
Resolving deltas 100% (99), done.
sridhar@DESKTOP-LHMTJ2I~$ ls
DevFolder  Devops--test  file.txt
sridhar@DESKTOP-LHMTJ2I~$ cd Devops--test
sridhar@DESKTOP-LHMTJ2I~Devops--test$ ls
bypass.txt  rebase.txt  rebase1.txt  rule.txt  rule1.txt  sample.txt  settings.txt  squash.txt  squash1.txt  test.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ vi local.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ ls
bypass.txt  rebase.txt   rule.txt   sample.txt    squash.txt   test.txt
local.txt   rebase1.txt  rule1.txt  settings.txt  squash1.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git branch
 main
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git add. local.txt
git 'add.' is not a git command. See 'git --help'.

The most similar command is
        add
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git --help
usage git [--version] [--help] [-C path] [-c name=value]
           [--exec-path[=path]] [--html-path] [--man-path] [--info-path]
           [-p  --paginate  -P  --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=path] [--work-tree=path] [--namespace=name]
           [--super-prefix=path] [--config-env=name=envvar]
           command [args]

These are common Git commands used in various situations

start a working area (see also git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help command' or 'git help concept'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git add . local.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ ls
bypass.txt  rebase.txt   rule.txt   sample.txt    squash.txt   test.txt
local.txt   rebase1.txt  rule1.txt  settings.txt  squash1.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git status
On branch main
Your branch is up to date with 'originmain'.

Changes to be committed
  (use git restore --staged file... to unstage)
        new file   local.txt

sridhar@DESKTOP-LHMTJ2I~Devops--test$ git config --global user.email sridhardevops@gmail.com



 ^C
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git config --global user.email sridhardevops@gmail.com


 ^C
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git config --global user.email sridhardevops@gmail.com


sridhar@DESKTOP-LHMTJ2I~Devops--test$ git config --global user.email sridhardevops@gmail.com
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git config --global user.name sridhardevops
sridhar@DESKTOP-LHMTJ2I~Devops--test$ ls
bypass.txt  rebase.txt   rule.txt   sample.txt    squash.txt   test.txt
local.txt   rebase1.txt  rule1.txt  settings.txt  squash1.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git status
On branch main
Your branch is up to date with 'originmain'.

Changes to be committed
  (use git restore --staged file... to unstage)
        new file   local.txt

sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push -m commit new file
error unknown switch `m'
usage git push [options] [repository [refspec...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --repo repository   repository
    --all                 push all refs
    --mirror              mirror all refs
    -d, --delete          delete refs
    --tags                push tags (can't be used with --all or --mirror)
    -n, --dry-run         dry run
    --porcelain           machine-readable output
    -f, --force           force updates
    --force-with-lease[=refnameexpect]
                          require old value of ref to be at this value
    --force-if-includes   require remote updates to be integrated locally
    --recurse-submodules (checkon-demandno)
                          control recursive pushing of submodules
    --thin                use thin pack
    --receive-pack receive-pack
                          receive pack program
    --exec receive-pack
                          receive pack program
    -u, --set-upstream    set upstream for git pullstatus
    --progress            force progress reporting
    --prune               prune locally removed refs
    --no-verify           bypass pre-push hook
    --follow-tags         push missing but relevant tags
    --signed[=(yesnoif-asked)]
                          GPG sign the push
    --atomic              request atomic transaction on remote side
    -o, --push-option server-specific
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only

sridhar@DESKTOP-LHMTJ2I~Devops--test$ git commit -m commit new file
[main 0b40d35] commit new file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 local.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin main
Username for 'httpsgithub.com' S SRIDHAR
Password for 'httpsS SRIDHAR@github.com'
remote Support for password authentication was removed on August 13, 2021.
remote Please see httpsdocs.github.comget-startedgetting-started-with-gitabout-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal Authentication failed for 'httpsgithub.comsridhar667Devops--test.git'
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin main
Username for 'httpsgithub.com' sridhar667
Password for 'httpssridhar667@github.com'
remote Support for password authentication was removed on August 13, 2021.
remote Please see httpsdocs.github.comget-startedgetting-started-with-gitabout-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal Authentication failed for 'httpsgithub.comsridhar667Devops--test.git'
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin main
Username for 'httpsgithub.com' S SRIDHAR
Password for 'httpsS SRIDHAR@github.com'
Enumerating objects 4, done.
Counting objects 100% (44), done.
Delta compression using up to 8 threads
Compressing objects 100% (22), done.
Writing objects 100% (33), 266 bytes  266.00 KiBs, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote Resolving deltas 100% (11), completed with 1 local object.
To httpsgithub.comsridhar667Devops--test.git
   7bed41c..0b40d35  main - main
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git branch
 main
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git checkout -b dv main
Switched to a new branch 'dv'
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git branch
 dv
  main
sridhar@DESKTOP-LHMTJ2I~Devops--test$ echo sample  sample1
sridhar@DESKTOP-LHMTJ2I~Devops--test$ ls
bypass.txt  rebase.txt   rule.txt   sample.txt  settings.txt  squash1.txt
local.txt   rebase1.txt  rule1.txt  sample1     squash.txt    test.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git add .
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin dev
error src refspec dev does not match any
error failed to push some refs to 'httpsgithub.comsridhar667Devops--test.git'
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin dv
Username for 'httpsgithub.com' S SRIDHAR
Password for 'httpsS SRIDHAR@github.com'
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote
remote Create a pull request for 'dv' on GitHub by visiting
remote      httpsgithub.comsridhar667Devops--testpullnewdv
remote
To httpsgithub.comsridhar667Devops--test.git
  [new branch]      dv - dv
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git commit -m commit new filein dv
[dv db04f0a] commit new filein dv
 1 file changed, 1 insertion(+)
 create mode 100644 sample1
sridhar@DESKTOP-LHMTJ2I~Devops--test$ echo sample  sample1.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git add .
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin dv
Username for 'httpsgithub.com' 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^Z
[1]+  Stopped                 git push origin dv
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git push origin dv
Username for 'httpsgithub.com' S SRIDHAR
Password for 'httpsS SRIDHAR@github.com'
Enumerating objects 4, done.
Counting objects 100% (44), done.
Delta compression using up to 8 threads
Compressing objects 100% (22), done.
Writing objects 100% (33), 272 bytes  272.00 KiBs, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote Resolving deltas 100% (11), completed with 1 local object.
To httpsgithub.comsridhar667Devops--test.git
   0b40d35..db04f0a  dv - dv
sridhar@DESKTOP-LHMTJ2I~Devops--test$ ls
bypass.txt  rebase.txt   rule.txt   sample.txt  sample1.txt   squash.txt   test.txt
local.txt   rebase1.txt  rule1.txt  sample1     settings.txt  squash1.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$ git commit -m commit new file in dv
[dv f095d69] commit new file in dv
 1 file changed, 1 insertion(+)
 create mode 100644 sample1.txt
sridhar@DESKTOP-LHMTJ2I~Devops--test$